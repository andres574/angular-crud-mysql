{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AppService {\n  constructor(http) {\n    this.http = http;\n    this.url = '/api/';\n  }\n  // sacar todos los afiliados\n  getAfiliados() {\n    return this.http.get(this.url + 'afiliado');\n  }\n  //anidar nuevo afiliado a la bd \n  anidarAfiliado(afiliado) {\n    return this.http.post(this.url + 'afiliado', afiliado);\n  }\n  // seleccionar un afiliado \n  UnAfiliado(id) {\n    return this.http.get(this.url + 'afiliado/' + id);\n  }\n  // eliminar afiliado\n  deleteAfiliado(id) {\n    return this.http.delete(this.url + 'afiliado/' + id);\n  }\n  //acualizar afiliado\n  actualizarAfiliado(id, afiliado) {\n    return this.http.put(this.url + 'afiliado/' + id, afiliado);\n  }\n  //obtener todos los documentos \n  getDocumento() {\n    return this.http.get(this.url + 'documentos');\n  }\n  getNsisben() {\n    return this.http.get(this.url + 'nSisben');\n  }\n}\nAppService.ɵfac = function AppService_Factory(t) {\n  return new (t || AppService)(i0.ɵɵinject(i1.HttpClient));\n};\nAppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppService,\n  factory: AppService.ɵfac,\n  providedIn: 'root'\n});\nexport { AppService };","map":{"version":3,"names":["AppService","constructor","http","url","getAfiliados","get","anidarAfiliado","afiliado","post","UnAfiliado","id","deleteAfiliado","delete","actualizarAfiliado","put","getDocumento","getNsisben","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/media/david/Nuevo vol/proyecto front and backend/back-front/FRONTED/src/app/servicios/App.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { AfiliadoInter } from '../interface/DatosAfiliado';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  url='/api/';\n\n  constructor(private http: HttpClient) { }\n\n  // sacar todos los afiliados\n  getAfiliados(){\n    return this.http.get(this.url+'afiliado');\n  };\n\n  //anidar nuevo afiliado a la bd \n  anidarAfiliado(afiliado:AfiliadoInter){\n\n    return this.http.post(this.url+'afiliado',afiliado);\n\n  };\n// seleccionar un afiliado \n  UnAfiliado(id:string){\n    return this.http.get(this.url+'afiliado/'+ id);\n  };\n\n  // eliminar afiliado\n  deleteAfiliado(id:string){\n    return this.http.delete(this.url+'afiliado/'+ id);\n  };\n\n  //acualizar afiliado\n  actualizarAfiliado(id:string,afiliado:AfiliadoInter){\nreturn this.http.put(this.url+'afiliado/'+id,afiliado);\n  };\n\n//obtener todos los documentos \ngetDocumento(){\n  return this.http.get(this.url+'documentos');\n};\n\ngetNsisben(){\n  return this.http.get(this.url+'nSisben');\n};\n\n\n}\n"],"mappings":";;AAKA,MAGaA,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAAC,OAAO;EAE6B;EAExC;EACAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,UAAU,CAAC;EAC3C;EAEA;EACAG,cAAcA,CAACC,QAAsB;IAEnC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,GAAG,GAAC,UAAU,EAACI,QAAQ,CAAC;EAErD;EACF;EACEE,UAAUA,CAACC,EAAS;IAClB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,WAAW,GAAEO,EAAE,CAAC;EAChD;EAEA;EACAC,cAAcA,CAACD,EAAS;IACtB,OAAO,IAAI,CAACR,IAAI,CAACU,MAAM,CAAC,IAAI,CAACT,GAAG,GAAC,WAAW,GAAEO,EAAE,CAAC;EACnD;EAEA;EACAG,kBAAkBA,CAACH,EAAS,EAACH,QAAsB;IACrD,OAAO,IAAI,CAACL,IAAI,CAACY,GAAG,CAAC,IAAI,CAACX,GAAG,GAAC,WAAW,GAACO,EAAE,EAACH,QAAQ,CAAC;EACpD;EAEF;EACAQ,YAAYA,CAAA;IACV,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,YAAY,CAAC;EAC7C;EAEAa,UAAUA,CAAA;IACR,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAC,SAAS,CAAC;EAC1C;;AAvCaH,UAAU,C;mBAAVA,UAAU,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVpB,UAAU,C;SAAVA,UAAU;EAAAqB,OAAA,EAAVrB,UAAU,CAAAsB,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEPvB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}